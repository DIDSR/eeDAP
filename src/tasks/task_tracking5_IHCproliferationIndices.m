function task_tracking5_IHCproliferationIndices( hObj )
%description
%pathologist drive IHCproliferationIndices study
%do global registration after study

%task input column
%tracking5_IHCproliferationIndices,TaskID,TaskOrder,Slot

%task output column
%tracking5_IHCproliferationIndices,TaskID,TaskOrder,Slot
%'track_veiw',study duration, slide name
%start Record Time,stop Record Time
%question1 4 check boxes result, question1 confidence 
%question2 4 check boxes result, question2 confidence 
%question3 result, question3 confidence 
%question4 result, question4 confidence 
%question5 result, question5 confidence 
%free text
%registration 3 stage positions

try
    
    handles = guidata(hObj);
    myData = handles.myData;
    taskinfo = myData.taskinfo;
    calling_function = handles.myData.taskinfo.calling_function;
    
    display([taskinfo.task, ' called from ', calling_function])
    
    switch calling_function
        
        case 'Load_Input_File' % Read in the taskinfo
            
           handles = guidata(hObj);
            
            desc = taskinfo.desc;

            taskinfo.task  = char(desc{1});
            taskinfo.id = char(desc{2});
            taskinfo.order = str2double(desc{3});
            taskinfo.slot = str2double(desc{4});
            taskinfo.question1 = '1.What is your main diagnosis? (Multiple choice)';
            taskinfo.question2 = '2.Classify the predominant histologic subtype of the main lesion.(Multiple choice)';
            taskinfo.question3 = '3.Perform a mitotic count in 21HPF and enter numerical value only. (example: 3 denotes 3% proliferative index; N/A if not applicable)';
            taskinfo.question4 = '4.Did the internal positive control for the IHC work appropriately? (Binary response)';
            taskinfo.question5 = '5.Determine the histologic grade. (Binary response)';
            wsi_files = myData.wsi_files{taskinfo.slot};
            taskinfo.roi_w = max(wsi_files.wsi_w);
            taskinfo.roi_h = max(wsi_files.wsi_h);
            taskinfo.roi_x = taskinfo.roi_w/2+1;
            taskinfo.roi_y = taskinfo.roi_h/2+1;
            mp = get(0, 'MonitorPositions');
            screensize= mp(find(mp(:,1)==1&mp(:,2)==1),:);
            if  taskinfo.roi_w/ taskinfo.roi_h>(screensize(4)*0.8)/screensize(3); 
                taskinfo.img_w = floor(screensize(4)*0.7)/10;
                taskinfo.img_h = 0;
            else
                taskinfo.img_w = 0;
                taskinfo.img_h = floor(screensize(3)*0.9)/10;
            end
            %wsi_files = handles.myData.wsi_files;
            %wsi_name = wsi_files{taskinfo.slot}.fullname;
            %slashIndex = strfind(wsi_name,'\');
            %wsi_name = wsi_name((slashIndex(end)+1):end);
            taskinfo.text  = '';
            taskinfo.freeText = 'No free text';
            taskinfo.rotateback = 0;
            taskinfo.question1result=zeros(1,4);
            taskinfo.question2result=zeros(1,4);
            if length(taskinfo.desc)>4
                myData.finshedTask = myData.finshedTask + 1;
            end            
        case {'Update_GUI_Elements', ...
                'ResumeButtonPressed'} % Initialize task elements
            
            % Load the image
            set(handles.task_panel,'Position',[0,0,0.66,0.6]);
            set(handles.Reticlebutton,'Enable','off');
            set(handles.ResetViewButton,'Enable','off');
            set(handles.PauseButton,'Enable','off');
            guidata(hObj, handles);
            taskimage_load(hObj);
            handles = guidata(hObj);

            % Show management buttons
            taskmgt_default(handles, 'on');
            handles = guidata(hObj);
            taskinfo.done2=zeros(1,12);
            taskinfo.done3=zeros(1,3);
            taskinfo.question1time = {};
            taskinfo.question1checkedBox = {};
            taskinfo.question2time = {};
            taskinfo.question2checkedBox = {};
            taskinfo.question3time = {};
            taskinfo.question3checkedBox = {};
            taskinfo.question4time = {};
            taskinfo.question4checkedBox = {};
            taskinfo.question5time = {};
            taskinfo.question5checkedBox = {};
            %open pdf
            wsi_files = myData.wsi_files{taskinfo.slot};
            wsi_files = handles.myData.wsi_files;
            wsi_name = wsi_files{taskinfo.slot}.fullname;
            slashIndex = strfind(wsi_name,'\');
            dotIndex = strfind(wsi_name,'.');
            pureWSIname = wsi_name((slashIndex(end)+1):dotIndex(end)-1);
            dirName = wsi_name(1:(slashIndex(end)-1));
            pdfDir = [dirName,'\clinicalHistory\',pureWSIname,'.pdf'];
            system(sprintf('start acrord32.exe %s',pdfDir));
           
          %% loading slide page
           wsi_files = handles.myData.wsi_files;
          wsi_name = wsi_files{taskinfo.slot}.fullname;
          slashIndex = strfind(wsi_name,'\');
          wsi_name = wsi_name((slashIndex(end)+1):end);
          loadSlideText  = {['Please load Slide ', wsi_name];
                            'Set microscope to 4X power, and focus.';
                            'Then click Start collect data button'};
         
         handles.loadSlideText = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', 30, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [.2, .2, .8, .6], ...
                    'Style', 'Text', ...
                    'String', loadSlideText, ...
                    'Tag', 'loadSlideText');  
          position = [0.85, 0, .15, .05];      
          handles.goToPage2 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'ForegroundColor',  handles.myData.settings.FG_color, ...
                'BackgroundColor',  handles.myData.settings.BG_color, ...
                'Position',position, ...
                'Style', 'pushbutton', ...
                'Tag', 'editvalue', ...
                'enable','on',...
                'String', 'Start collect data',...
                'Callback',@goToPage2_Callback);
            
          %% data collection page
          % Start tracking button
          handles.startTracking = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', 16, ...
                    'Units', 'normalized', ...
                    'ForegroundColor',  handles.myData.settings.FG_color, ...
                    'BackgroundColor',  handles.myData.settings.BG_color, ...
                    'Position',[0.6,0.95,0.2,0.05], ...
                    'Style', 'pushbutton', ...
                    'Tag', 'editvalue', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Start tracking',...
                    'Callback',@startTrackView_Callback);  

          % Stop tracking button
          handles.stopTracking = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', 16, ...
                    'Units', 'normalized', ...
                    'ForegroundColor',  handles.myData.settings.FG_color, ...
                    'BackgroundColor',  handles.myData.settings.BG_color, ...
                    'Position',[0.8,0.95,0.2,0.05], ...
                    'Style', 'pushbutton', ...
                    'Tag', 'editvalue', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Stop tracking',...
                    'Callback',@stopTrackView_Callback);  
                
          % Recoding status
           handles.recodingStatus = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', 16, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.4,0.9,0.2,0.1], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Click Start tracking button to record', ...
                    'Tag', 'recodingStatus');
                
           % SlideNameText
           handles.slideNameText = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.05,0.8,0.2,0.05], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Please input slide name', ...
                    'Tag', 'slideNameText');
           

           % SlideNameText
           handles.slideNameResult = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.25,0.8,0.2,0.05], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'slideNameResult', ...
                'Callback', @slideNameResult_Callback);
 
           % timer text

           handles.timerText = uicontrol('Parent', handles.task_panel, ...
                                 'ForegroundColor', handles.myData.settings.FG_color, ...
                                 'BackgroundColor', handles.myData.settings.BG_color, ...
                                 'Units', 'normalized', ...
                                 'style','text',...
                                 'position',[0.6, 0.8, 0.1, 0.05],...
                                 'string',datestr(now,13),...
                                 'fontsize',18,...
                                 'Enable','off',...
                                 'visible','off',...
                                 'Tag', 'timerText'); 
            
            
           % timer funtion
           handles.tmr = timer('Period',1,...  % Update the time every 60 seconds.
                        'TasksToExecute',inf,...  % number of times to update
                        'ExecutionMode','fixedrate',...
                        'TimerFcn',{@updater,handles.output});     
                    
           % confidenceText
           handles.confidenceText = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.9,0.7,0.1,0.05], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'confidence of result (0-100)', ...
                    'Tag', 'confidenceText');
                
                
           % Question 1 text
           handles.questionText1 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.05,0.6,0.5,0.075], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', taskinfo.question1, ...
                    'Tag', 'questionText1');
            % Question 1 checkbox1
            handles.question1Checkbox1 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.6,0.625,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question1Checkbox1_Callback, ...
                'String', 'Benign');
            % Question 1 checkbox2
            handles.question1Checkbox2 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.675,0.625,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question1Checkbox2_Callback, ...
                'String', 'Adenocarcinoma');  
            % Question 1 checkbox3
            handles.question1Checkbox3 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.75,0.625,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question1Checkbox3_Callback, ...
                'String', 'GIST');  
            % Question 1 checkbox4
            handles.question1Checkbox4 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.825,0.625,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question1Checkbox4_Callback, ...
                'String', 'Lymphoma');            
            % Question 1 confidence
            handles.questionConfidence1 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.9,0.6,0.075,0.075], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'questionConfidence1', ...
                'Callback', @questionConfidence1_Callback);          
            
         
            
           % Question 2 text
           handles.questionText2 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.05,0.5,0.55,0.075], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', taskinfo.question2, ...
                    'Tag', 'questionText2');
            % Question 2 checkbox1
            handles.question2Checkbox1 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.6,0.525,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question2Checkbox1_Callback, ...
                'String', 'spindle cell');
            % Question 2 checkbox2
            handles.question2Checkbox2 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.675,0.525,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question2Checkbox2_Callback, ...
                'String', 'epithelioid');  
            % Question 2 checkbox3
            handles.question2Checkbox3 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.75,0.525,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question2Checkbox3_Callback, ...
                'String', 'mixed');  
            % Question 2 checkbox4
            handles.question2Checkbox4 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.825,0.525,0.075,0.05], ...
                'Style', 'checkbox', ...
                'Enable','off',...
                'visible','off',...
                'Callback',@question2Checkbox4_Callback, ...
                'String', 'N/A');              
            % Question 2 confidence
            handles.questionConfidence2 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.9,0.5,0.075,0.075], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'questionConfidence2', ...
                'Callback', @questionConfidence2_Callback);
            
            
           % Question 3 text
           handles.questionText3 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.05,0.4,0.55,0.075], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', taskinfo.question3, ...
                    'Tag', 'questionText3');
           % Question 3 comment
           handles.question3Comment = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.6,0.4,0.3,0.075], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'commentResult3', ...
                'Callback', @question3Comment_Callback);  
            % Question 3 confidence
            handles.questionConfidence3 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.9,0.4,0.075,0.075], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'questionConfidence3', ...
                'Callback', @questionConfidence3_Callback);

            
           % Question 4 text
           handles.questionText4 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.05,0.3,0.55,0.075], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', taskinfo.question4, ...
                    'Tag', 'questionText4');
            % Question 4 panel   
            handles.question4panel = uibuttongroup('Parent',handles.task_panel,...
                'Position',[0.6,0.325,0.25,0.05],...
                'visible','off');
            % Question 4 radio button 1    
            handles.question4Radiobutton1 = uicontrol(...
                'Parent', handles.question4panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0,0,0.5,1], ...
                'Style', 'radiobutton', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'question4Radiobutton1', ...
                'String', 'Yes');
            % Question 4 radio button 2  
            handles.question4Radiobutton2 = uicontrol(...
                'Parent', handles.question4panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.5,0,0.5,1], ...
                'Style', 'radiobutton', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'question4Radiobutton2', ...
                'String', 'No');
            set(handles.question4panel, ...
                'SelectionChangeFcn', @question4Radiobutton_Callback, ...
                'SelectedObject', []);
            % Question 4 confidence
            handles.questionConfidence4 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.9,0.3,0.075,0.075], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'questionConfidence4', ...
                'Callback', @questionConfidence4_Callback);
            
            
           % Question 5 text
           handles.questionText5 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.05,0.2,0.55,0.075], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', taskinfo.question5, ...
                    'Tag', 'questionText5');
            % Question 5 panel   
            handles.question5panel = uibuttongroup('Parent',handles.task_panel,...
                'Position',[0.6,0.225,0.25,0.05],...
                'visible','off');
            % Question 5 radio button 1    
            handles.question5Radiobutton1 = uicontrol(...
                'Parent', handles.question5panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0,0,0.5,1], ...
                'Style', 'radiobutton', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'question5Radiobutton1', ...
                'String', 'Low grade');
            % Question 5 radio button 2  
            handles.question5Radiobutton2 = uicontrol(...
                'Parent', handles.question5panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'left', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', handles.myData.settings.BG_color, ...
                'Position', [0.5,0,0.5,1], ...
                'Style', 'radiobutton', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'question5Radiobutton2', ...
                'String', 'High grade');
            set(handles.question5panel, ...
                'SelectionChangeFcn', @question5Radiobutton_Callback, ...
                'SelectedObject', []);
            % Question 5 confidence
            handles.questionConfidence5 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.9,0.2,0.075,0.075], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'questionConfidence5', ...
                'Callback', @questionConfidence5_Callback);
            
           % Comment text
           handles.commentText6 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.05,0.05,0.1,0.075], ...
                    'Style', 'Text', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Comment (option)', ...
                    'Tag', 'questionText5');
           % Comment result
            handles.commentResult6 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.3,0.05,0.5,0.075], ...
                'Style', 'edit', ...
                'Enable','off',...
                'visible','off',...
                'Tag', 'commentResult6', ...
                'Callback', @commentResult6_Callback);
            
           % go to page 3
           position = [0.85, 0, .15, .05];      
           handles.goToPage3 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'ForegroundColor',  handles.myData.settings.FG_color, ...
                'BackgroundColor',  handles.myData.settings.BG_color, ...
                'Position',position, ...
                'Style', 'pushbutton', ...
                'Tag', 'editvalue', ...
                'Enable','off',...
                'visible','off',...
                'String', 'Start registration',...
                'Callback',@goToPage3_Callback);
            
            %% registration page
            % registration text
            registrationText  = 'Please do registration for up left, bottom left, bottom right corner of slide based on registration instruction'; 
             handles.registrationText = uicontrol(...
                        'Parent', handles.task_panel, ...
                        'FontSize', 20, ...
                        'Units', 'normalized', ...
                        'HorizontalAlignment', 'left', ...
                        'ForegroundColor', handles.myData.settings.FG_color, ...
                        'BackgroundColor', handles.myData.settings.BG_color, ...
                        'Position', [.2, .6, .8, .2], ...
                        'Style', 'Text', ...
                        'Enable','off',...
                        'visible','off',...
                        'String', registrationText, ...
                        'Tag', 'loadSlideText');  

              % up left registration      
              position = [0.2, 0.45, .15, .1];      
              handles.upLeftReg = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'ForegroundColor',  handles.myData.settings.FG_color, ...
                    'BackgroundColor',  handles.myData.settings.BG_color, ...
                    'Position',position, ...
                    'Style', 'pushbutton', ...
                    'Tag', 'editvalue', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Up Left Reg',...
                    'Callback',@upLeftReg_Callback);

              % bottom left registration   
              position = [0.4, 0.45, .15, .1];      
              handles.bottomLeftReg = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'ForegroundColor',  handles.myData.settings.FG_color, ...
                    'BackgroundColor',  handles.myData.settings.BG_color, ...
                    'Position',position, ...
                    'Style', 'pushbutton', ...
                    'Tag', 'editvalue', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Bottom Left Reg',...
                    'Callback',@bottomLeftReg_Callback);

              % bottom right registration    
              position = [0.6, 0.45, .15, .1];      
              handles.bottomRightReg = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'ForegroundColor',  handles.myData.settings.FG_color, ...
                    'BackgroundColor',  handles.myData.settings.BG_color, ...
                    'Position',position, ...
                    'Style', 'pushbutton', ...
                    'Tag', 'editvalue', ...
                    'Enable','off',...
                    'visible','off',...
                    'String', 'Bottom Right Reg',...
                    'Callback',@bottomRightReg_Callback);
            
            

        case {'NextButtonPressed', ...
                'PauseButtonPressed',...
                'Backbutton_Callback'} % Clean up the task elements
            
            % Hide image and management buttons
            
            taskmgt_default(handles, 'off');
            handles = guidata(hObj);
            set(handles.task_panel,'Position',[0,0,0.66,0.2]);
            set(handles.iH,'visible','off');
            set(handles.ImageAxes,'visible','off');
            delete(handles.startTracking);
            delete(handles.stopTracking);
            delete(handles.recodingStatus);
            delete(handles.confidenceText);
            delete(handles.timerText);
            delete(handles.questionText1);
            delete(handles.question1Checkbox1);
            delete(handles.question1Checkbox2);
            delete(handles.question1Checkbox3);
            delete(handles.question1Checkbox4);
            delete(handles.questionConfidence1);
            delete(handles.questionText2);
            delete(handles.question2Checkbox1);
            delete(handles.question2Checkbox2);
            delete(handles.question2Checkbox3);
            delete(handles.question2Checkbox4);
            delete(handles.questionConfidence2);
            delete(handles.questionText3);
            delete(handles.question3Comment);
            delete(handles.questionConfidence3);
            delete(handles.questionText4);
            delete(handles.question4panel);
            delete(handles.question4Radiobutton1);
            delete(handles.question4Radiobutton2);
            delete(handles.questionConfidence4);
            delete(handles.questionText5);
            delete(handles.question5panel);
            delete(handles.question5Radiobutton1);
            delete(handles.question5Radiobutton2);
            delete(handles.questionConfidence5);
            delete(handles.slideNameText);
            delete(handles.slideNameResult);                 
            delete(handles.commentText6);
            delete(handles.commentResult6);
            delete(handles.loadSlideText);           
            delete(handles.upLeftReg);
            delete(handles.bottomLeftReg);
            delete(handles.bottomRightReg);
            delete(handles.goToPage3);
            delete(handles.registrationText);
            
            handles = rmfield(handles, 'startTracking');
            handles = rmfield(handles, 'stopTracking');
            handles = rmfield(handles, 'recodingStatus');
            handles = rmfield(handles, 'confidenceText');
            handles = rmfield(handles, 'timerText');
            handles = rmfield(handles, 'questionText1');
            handles = rmfield(handles, 'question1Checkbox1');
            handles = rmfield(handles, 'question1Checkbox2');
            handles = rmfield(handles, 'question1Checkbox3');
            handles = rmfield(handles, 'question1Checkbox4');
            handles = rmfield(handles, 'questionConfidence1');
            handles = rmfield(handles, 'questionText2');
            handles = rmfield(handles, 'question2Checkbox1');
            handles = rmfield(handles, 'question2Checkbox2');
            handles = rmfield(handles, 'question2Checkbox3');
            handles = rmfield(handles, 'question2Checkbox4');
            handles = rmfield(handles, 'questionConfidence2');
            handles = rmfield(handles, 'questionText3');
            handles = rmfield(handles, 'question3Comment');
            handles = rmfield(handles, 'questionConfidence3');
            handles = rmfield(handles, 'questionText4');
            handles = rmfield(handles, 'question4panel');
            handles = rmfield(handles, 'question4Radiobutton1');
            handles = rmfield(handles, 'question4Radiobutton2');
            handles = rmfield(handles, 'questionConfidence4');
            handles = rmfield(handles, 'questionText5');
            handles = rmfield(handles, 'question5panel');
            handles = rmfield(handles, 'question5Radiobutton1');
            handles = rmfield(handles, 'question5Radiobutton2');
            handles = rmfield(handles, 'questionConfidence5');
            handles = rmfield(handles, 'slideNameText');
            handles = rmfield(handles, 'slideNameResult');
            handles = rmfield(handles, 'commentText6');
            handles = rmfield(handles, 'commentResult6');
            handles = rmfield(handles, 'loadSlideText');
            handles = rmfield(handles, 'upLeftReg');
            handles = rmfield(handles, 'bottomLeftReg');
            handles = rmfield(handles, 'bottomRightReg');
            handles = rmfield(handles, 'goToPage3');
            handles = rmfield(handles, 'registrationText');
            
        case 'exportOutput' % export current task information and reuslt
            if taskinfo.currentWorking ==1 % write finish task in current study
                fprintf(myData.fid, [...
                    taskinfo.task, ',', ...
                    taskinfo.id, ',', ...
                    num2str(taskinfo.order), ',', ...
                    num2str(taskinfo.slot), ',',...
                    'track_veiw', ',', ...
                    num2str(taskinfo.duration),',',...
                    taskinfo.slideName,',',...
                    taskinfo.startRecordTime,',',...
                    taskinfo.stopRecordTime,',',...
                    num2str(taskinfo.question1result(1)),',',...
                    num2str(taskinfo.question1result(2)),',',...
                    num2str(taskinfo.question1result(3)),',',...
                    num2str(taskinfo.question1result(4)),',',...
                    taskinfo.confidence1,',',...                
                    num2str(taskinfo.question2result(1)),',',...
                    num2str(taskinfo.question2result(2)),',',...
                    num2str(taskinfo.question2result(3)),',',...
                    num2str(taskinfo.question2result(4)),',',...
                    taskinfo.confidence2,',',...    
                    taskinfo.question3result,',',...
                    taskinfo.confidence3,',',...    
                    taskinfo.question4result,',',...
                    taskinfo.confidence4,',',...    
                    taskinfo.question5result,',',...
                    taskinfo.confidence5,',',...    
                    taskinfo.freeText,',',...
                    taskinfo.stagePosition{1},',',...
                    taskinfo.stagePosition{2},',',...
                    taskinfo.stagePosition{3}]);
            elseif taskinfo.currentWorking ==0 % write undone task
                fprintf(myData.fid, [...
                    taskinfo.task, ',', ...
                    taskinfo.id, ',', ...
                    num2str(taskinfo.order), ',', ...
                    num2str(taskinfo.slot)]);
            else                               % write done2 task from previous study
                desc = taskinfo.desc;
                for i = 1 : length(desc)-1
                    fprintf(myData.fid,[desc{i},',']);
                end
                fprintf(myData.fid,[desc{length(desc)}]);
            end            
            fprintf(myData.fid,'\r\n');
            handles.myData.taskinfo = taskinfo;
            guidata(handles.GUI, handles);   
            
    end

    % Update handles.myData.taskinfo and pack
    myData.taskinfo = taskinfo;
    handles.myData = myData;
    guidata(hObj, handles);

catch ME
    error_show(ME)
end
end


%% loading slide page button
function goToPage2_Callback(hObj, eventdata) %#ok<DEFNU>
try
     handles = guidata(findobj('Tag','GUI'));
     % hide page 1 info
     set(handles.loadSlideText,'visible','off','Enable','off');
     set(handles.goToPage2,'visible','off','Enable','off');
     % show page 2 info
     set(handles.confidenceText,'visible','on','Enable','on');
     set(handles.timerText,'visible','on','Enable','on');
     start(handles.tmr);
     set(handles.questionText1,'visible','on','Enable','on');
     set(handles.question1Checkbox1,'visible','on','Enable','on');
     set(handles.question1Checkbox2,'visible','on','Enable','on');
     set(handles.question1Checkbox3,'visible','on','Enable','on');
     set(handles.question1Checkbox4,'visible','on','Enable','on');
     set(handles.questionConfidence1,'visible','on','Enable','on');
     set(handles.questionText2,'visible','on','Enable','on');
     set(handles.question2Checkbox1,'visible','on','Enable','on');
     set(handles.question2Checkbox2,'visible','on','Enable','on');
     set(handles.question2Checkbox3,'visible','on','Enable','on');
     set(handles.question2Checkbox4,'visible','on','Enable','on');
     set(handles.questionConfidence2,'visible','on','Enable','on');
     set(handles.questionText3,'visible','on','Enable','on');
     set(handles.question3Comment,'visible','on','Enable','on');
     set(handles.questionConfidence3,'visible','on','Enable','on');
     set(handles.question4panel,'visible','on');    
     set(handles.questionText4,'visible','on','Enable','on');
     set(handles.question4Radiobutton1,'visible','on','Enable','on');
     set(handles.question4Radiobutton2,'visible','on','Enable','on');
     set(handles.questionConfidence4,'visible','on','Enable','on');
     set(handles.question5panel,'visible','on'); 
     set(handles.questionText5,'visible','on','Enable','on');
     set(handles.question5Radiobutton1,'visible','on','Enable','on');
     set(handles.question5Radiobutton2,'visible','on','Enable','on');
     set(handles.questionConfidence5,'visible','on','Enable','on');
     set(handles.slideNameText,'visible','on','Enable','on');
     set(handles.slideNameResult,'visible','on','Enable','on');
     set(handles.startTracking,'visible','on','Enable','on');
     set(handles.stopTracking,'visible','on','Enable','off');
     set(handles.recodingStatus,'visible','on','Enable','on');
     set(handles.commentText6,'visible','on','Enable','on');
     set(handles.commentResult6,'visible','on','Enable','on');
     set(handles.goToPage3,'visible','on','Enable','off');

catch ME
    error_show(ME)
end
end
function updater(hObject, eventdata, hFigure)
    % timerfcn for the timer.  If figure is deleted, so is timer.
         % I use a try-catch here because timers are finicky in my
         % experience.
    handles = guidata(hFigure);
    set(handles.timerText,'string',datestr(now,13));
    guidata(hFigure, handles);
 end

%% data collection page buttons
% --- Executes on button press in Recode_video.
function startTrackView_Callback(hObj, eventdata)
% hObject    handle to Recode_video (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    handles = guidata(hObj);
    myData = handles.myData;
    FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
    %taskinfo = myData.taskinfo;
    taskinfo = handles.myData.tasks_out{handles.myData.iter};  
    if ~exist(FolderName,'file')
        mkdir(FolderName);
    end
    % manage buttons
    set(handles.startTracking,'Enable','off')
    set(handles.stopTracking,'Enable','on')
    set(handles.recodingStatus,'String','Recording!');

    %    guidata(hObject, handles);

    
        
    % record audio
    audioExist = audiodevinfo;
    if (size(audioExist.input,1)>0)
        wavObject = audiorecorder;
        record(wavObject);
        handles.audio = wavObject;
    end
    
    % record video
    aviObject = VideoWriter(strcat(FolderName,'\',...
                            'ID-',taskinfo.id,...
                            '_iter-',num2str(taskinfo.order),...
                            '_recordVideo.avi')); 
    aviObject.FrameRate = 15; 
    handles.cam.DiskLogger = aviObject;
    handles.cam.LoggingMode = 'disk';
    handles.cam.TriggerRepeat = Inf;
    handles.cam.FramesPerTrigger = Inf;
    start(handles.cam);

    
    % record stage position
    handles.recordStagePosition=[];
    %     handles.recordTime = [];
%     handles.recordStagePositionX = [];
%     handles.recordStagePositionY = [];
    handles.recordTime = {};
    handles.recordStagePositionX = {};
    handles.recordStagePositionY = {};
    guidata(hObj, handles);
    handles.stageTimer = timer('ExecutionMode','fixedrate','Period',2,...
    'TimerFcn',{@executeStageTimer,handles.output});
    start(handles.stageTimer);
    
    taskinfo.startRecordTime = datestr(clock,30);
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    
    guidata(hObj, handles);

end


% --- Executes on button press in Stop_video.
function stopTrackView_Callback(hObj, eventdata)
% hObject    handle to Stop_video (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    handles = guidata(hObj);
    myData = handles.myData;
    FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
    %taskinfo = myData.taskinfo;
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    set(handles.stopTracking,'Enable','off');
    set(handles.recodingStatus,'String','Saving data. Please waiting');
    % stage 
    stop(handles.stageTimer);
    delete(handles.stageTimer);
    %delete(timerfindall);
    stageFileName =strcat(FolderName,'\',...
                                'ID-',taskinfo.id,...
                                '_iter-',num2str(taskinfo.order),...
                                '_recordStage.csv');    
    systemTime= handles.recordTime;
    PositionX=handles.recordStagePositionX;
    PositionY=handles.recordStagePositionY;
        % insert questions answered time to csv file
    question1List=repmat({'NA'},[length(PositionX),1]);
    question1checkedBox = taskinfo.question1checkedBox;
    question1time = taskinfo.question1time;
    question2List=repmat({'NA'},[length(PositionX),1]);
    question2checkedBox = taskinfo.question2checkedBox;
    question2time = taskinfo.question2time;
    question3List=repmat({'NA'},[length(PositionX),1]);
    question3checkedBox = taskinfo.question3checkedBox;
    question3time = taskinfo.question3time;
    question4List=repmat({'NA'},[length(PositionX),1]);
    question4checkedBox = taskinfo.question4checkedBox;
    question4time = taskinfo.question4time;
    question5List=repmat({'NA'},[length(PositionX),1]);
    question5checkedBox = taskinfo.question5checkedBox;
    question5time = taskinfo.question5time;
    for i = 1 : length(systemTime)
        tempSystemTime = systemTime{i};
        %question 1
        if length(question1time)>=1
           tempQuestion1time = question1time{1}; 
           while datetime(tempQuestion1time)<=datetime(tempSystemTime)
              if strcmp(question1List{i},'NA')
                  question1List{i} = question1checkedBox{1};
              else
                  question1List{i} = [question1List{i},';',question1checkedBox{1}];
              end
              question1time(1) = [];
              question1checkedBox(1) = [];
              if length(question1time)>=1
                  tempQuestion1time = question1time{1}; 
              else
                  break;
              end
           end
        end
        %question 2
        if length(question2time)>=1
           tempQuestion2time = question2time{1}; 
           while datetime(tempQuestion2time)<=datetime(tempSystemTime)
              if strcmp(question2List{i},'NA')
                  question2List{i} = question2checkedBox{1};
              else
                  question2List{i} = [question2List{i},';',question2checkedBox{1}];
              end
              question2time(1) = [];
              question2checkedBox(1) = [];
              if length(question2time)>=1
                 tempQuestion2time = question2time{1}; 
              else
                  break;
              end
           end
        end  
        %question 3
        if length(question3time)>=1
           tempQuestion3time = question3time{1}; 
           while datetime(tempQuestion3time)<=datetime(tempSystemTime)
               if strcmp(question3List{i},'NA')
                   question3List{i} = question3checkedBox{1};
               else
                   question3List{i} = [question3List{i},';',question3checkedBox{1}];
               end
              question3time(1) = [];
              question3checkedBox(1) = [];
              if length(question3time)>=1
                 tempQuestion3time = question3time{1}; 
              else
                  break;
              end
           end
        end  
        %question 4
        if length(question4time)>=1
           tempQuestion4time = question4time{1}; 
           while datetime(tempQuestion4time)<=datetime(tempSystemTime)
               if strcmp(question4List{i},'NA')
                   question4List{i} = question4checkedBox{1};
               else
                   question4List{i} = [question4List{i},';',question4checkedBox{1}];
               end
              question4time(1) = [];
              question4checkedBox(1) = [];
              if length(question4time)>=1
                 tempQuestion4time = question4time{1}; 
              else
                 break;
              end
           end
        end  
        %question 5
        if length(question5time)>=1
           tempQuestion5time = question5time{1}; 
           while datetime(tempQuestion5time)<=datetime(tempSystemTime)
               if strcmp(question5List{i},'NA')
                   question5List{i} = question5checkedBox{1};
               else
                   question5List{i} = [question5List{i},';',question5checkedBox{1}];
               end          
              question5time(1) = [];
              question5checkedBox(1) = [];
              if length(question5time)>=1
                 tempQuestion5time = question5time{1}; 
              else
                 break;
              end
           end
        end  
    end
    systemTime = systemTime';
    PositionX = PositionX';
    PositionY = PositionY';
    stageTable = table(systemTime,PositionX,PositionY,question1List,question2List,question3List,question4List,question5List);
    writetable(stageTable,stageFileName);
    t1 = table(taskinfo.question1time',taskinfo.question1checkedBox');
    writetable(t1,'q1.csv');
    t2 = table(taskinfo.question2time',taskinfo.question2checkedBox');
    writetable(t2,'q2.csv');
    t3 = table(taskinfo.question3time',taskinfo.question3checkedBox');
    writetable(t3,'q3.csv');
    t4 = table(taskinfo.question4time',taskinfo.question4checkedBox');
    writetable(t4,'q4.csv');
    t5 = table(taskinfo.question5time',taskinfo.question5checkedBox');
    writetable(t5,'q5.csv');
    % audio
    audioExist = audiodevinfo;
    if (size(audioExist.input,1)>0)
        wavObject = handles.audio;
        stop(wavObject);
        audioData = getaudiodata(wavObject);
        audioFileName =strcat(FolderName,'\',...
                                'ID-',taskinfo.id,...
                                '_iter-',num2str(taskinfo.order),...
                                '_recordAudio.wav');
        audiowrite(audioFileName,audioData,wavObject.SampleRate);
    end
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    taskinfo.stopRecordTime = datestr(clock,30);
    % video
    video= handles.cam;
    stop(video);
    close(handles.cam.DiskLogger);
    %csvwrite(stageFileName,handles.recordStagePosition)
    
    
    
    % manage buttons
    set(handles.recodingStatus,'String',{'Click Start tracking button to record'});
    set(handles.startTracking,'Enable','on');
    
    

    taskinfo.done2(11)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3, 'Enable', 'on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(hObj, handles);
end


%This function keep saving stage position every 'Period'
%duration of the timer
function executeStageTimer(hObject, eventdata, hFigure)
%    time1=clock;
    handles = guidata(hFigure);
     handles.myData.stage = stage_get_pos(handles.myData.stage);
    %     handles.recordTime = [handles.recordTime;datestr(clock,30)];
%     handles.recordStagePositionX = [handles.recordStagePositionX; handles.myData.stage.Pos(1)];
%     handles.recordStagePositionY = [handles.recordStagePositionY; handles.myData.stage.Pos(2)];
    
    recordLength = length(handles.recordTime);
    handles.recordTime{recordLength+1} = datestr(clock,30);
    handles.recordStagePositionX{recordLength+1} = handles.myData.stage.Pos(1);
    handles.recordStagePositionY{recordLength+1} = handles.myData.stage.Pos(2);
    %disp(currentTimeInfo);
%     time2=clock;
%     etime(time1,time2)
    guidata(hFigure, handles);
end


% question 1
function question1Checkbox1_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question1time);
    taskinfo.question1time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question1result(1)=1;
        taskinfo.question1checkedBox{recordLength+1} = 'B1Check';
    else
        taskinfo.question1result(1)=0;
        taskinfo.question1checkedBox{recordLength+1} = 'B1Uncheck';
    end
    taskinfo.done2(1)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function question1Checkbox2_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question1time);
    taskinfo.question1time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question1result(2)=1;
        taskinfo.question1checkedBox{recordLength+1} = 'B2Check';
    else
        taskinfo.question1result(2)=0;
        taskinfo.question1checkedBox{recordLength+1} = 'B2Uncheck';
    end
    taskinfo.done2(1)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function question1Checkbox3_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question1time);
    taskinfo.question1time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question1result(3)=1;
        taskinfo.question1checkedBox{recordLength+1} = 'B3Check';
    else
        taskinfo.question1result(3)=0;
        taskinfo.question1checkedBox{recordLength+1} = 'B3Uncheck';
    end
    taskinfo.done2(1)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function question1Checkbox4_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question1time);
    taskinfo.question1time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question1result(4)=1;
        taskinfo.question1checkedBox{recordLength+1} = 'B4Check';
    else
        taskinfo.question1result(4)=0;
        taskinfo.question1checkedBox{recordLength+1} = 'B4Uncheck';
    end
    taskinfo.done2(1)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end


function questionConfidence1_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.confidence1 = get(handles.questionConfidence1, 'String');
    taskinfo.done2(2)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

% question 2
function question2Checkbox1_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question2time);
    taskinfo.question2time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question2result(1)=1;
        taskinfo.question2checkedBox{recordLength+1} = 'B1Check';
    else
        taskinfo.question2result(1)=0;
        taskinfo.question2checkedBox{recordLength+1} = 'B1Uncheck';
    end
    taskinfo.done2(3)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function question2Checkbox2_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question2time);
    taskinfo.question2time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question2result(2)=1;
        taskinfo.question2checkedBox{recordLength+1} = 'B2Check';
    else
        taskinfo.question2result(2)=0;
        taskinfo.question2checkedBox{recordLength+1} = 'B2Uncheck';
    end
    taskinfo.done2(3)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function question2Checkbox3_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question2time);
    taskinfo.question2time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question2result(3)=1;
        taskinfo.question2checkedBox{recordLength+1} = 'B3Check';
    else
        taskinfo.question2result(3)=0;
        taskinfo.question2checkedBox{recordLength+1} = 'B3Uncheck';
    end
    taskinfo.done2(3)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function question2Checkbox4_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question2time);
    taskinfo.question2time{recordLength+1} = datestr(clock,30);
    if (get(hObj,'Value') == get(hObj,'Max'))
        taskinfo.question2result(4)=1;
        taskinfo.question2checkedBox{recordLength+1} = 'B4Check';
    else
        taskinfo.question2result(4)=0;
        taskinfo.question2checkedBox{recordLength+1} = 'B4Uncheck';
    end
    taskinfo.done2(3)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function questionConfidence2_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.confidence2 = get(handles.questionConfidence2, 'String');
    taskinfo.done2(4)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

% question 3
function question3Comment_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question3time);
    taskinfo.question3time{recordLength+1} = datestr(clock,30);
    taskinfo.question3checkedBox{recordLength+1} = 'Edit';
    % Pack the results
    taskinfo.question3result = get(handles.question3Comment, 'String');
    taskinfo.done2(5)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
        set(handles.goToPage3,'Enable','on');
    end

    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function questionConfidence3_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.confidence3 = get(handles.questionConfidence3, 'String');
    taskinfo.done2(6)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

% question 4
function question4Radiobutton_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question4time);
    taskinfo.question4time{recordLength+1} = datestr(clock,30);
    taskinfo.button_desc = get(eventdata.NewValue, 'Tag');
    switch taskinfo.button_desc
        case 'question4Radiobutton1'
            taskinfo.question4result = 'Yes';
            taskinfo.question4checkedBox{recordLength+1} = 'Yes';
        case 'question4Radiobutton2'
            taskinfo.question4result = 'No';
            taskinfo.question4checkedBox{recordLength+1} = 'No';
    end
    taskinfo.done2(7)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
        set(handles.goToPage3,'Enable','on');
    end

    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function questionConfidence4_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.confidence4 = get(handles.questionConfidence4, 'String');
    taskinfo.done2(8)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

% question 5
function question5Radiobutton_Callback(hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    recordLength = length(taskinfo.question5time);
    taskinfo.question5time{recordLength+1} = datestr(clock,30);
    taskinfo.button_desc = get(eventdata.NewValue, 'Tag');
    switch taskinfo.button_desc
        case 'question5Radiobutton1'
            taskinfo.question5result = 'Low';
            taskinfo.question5checkedBox{recordLength+1} = 'Low';
        case 'question5Radiobutton2'
            taskinfo.question5result = 'High';
            taskinfo.question5checkedBox{recordLength+1} = 'High';
    end
    taskinfo.done2(9)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
        set(handles.goToPage3,'Enable','on');
    end

    % Pack the results
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end
function questionConfidence5_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.confidence5 = get(handles.questionConfidence5, 'String');
    taskinfo.done2(10)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

function slideNameResult_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.slideName = get(handles.slideNameResult, 'String');
    taskinfo.done2(12)=1;
    tdone2=sum(taskinfo.done2);
    if tdone2==12
       set(handles.goToPage3,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end


function commentResult6_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.freeText = get(handles.commentResult6, 'String');
    tdone2=sum(taskinfo.done2);
    if tdone2==12
        set(handles.goToPage3,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end


function goToPage3_Callback(hObj, eventdata) %#ok<DEFNU>
try
     handles = guidata(findobj('Tag','GUI'));
     % hide page 2 info
     set(handles.confidenceText,'visible','off','Enable','off');
     set(handles.timerText,'visible','off','Enable','off');
     stop(handles.tmr);
     delete(handles.tmr);
     set(handles.questionText1,'visible','off','Enable','off');
     set(handles.question1Checkbox1,'visible','off','Enable','off');
     set(handles.question1Checkbox2,'visible','off','Enable','off');
     set(handles.question1Checkbox3,'visible','off','Enable','off');
     set(handles.question1Checkbox4,'visible','off','Enable','off');
     set(handles.questionConfidence1,'visible','off','Enable','off');
     set(handles.questionText2,'visible','off','Enable','off');
     set(handles.question2Checkbox1,'visible','off','Enable','off');
     set(handles.question2Checkbox2,'visible','off','Enable','off');
     set(handles.question2Checkbox3,'visible','off','Enable','off');
     set(handles.question2Checkbox4,'visible','off','Enable','off');
     set(handles.questionConfidence2,'visible','off','Enable','off');
     set(handles.questionText3,'visible','off','Enable','off');
     set(handles.question3Comment,'visible','off','Enable','off');
     set(handles.questionConfidence3,'visible','off','Enable','off');
     set(handles.questionText4,'visible','off','Enable','off');
     set(handles.question4panel,'visible','off');   
     set(handles.question4Radiobutton1,'visible','off','Enable','off');
     set(handles.question4Radiobutton2,'visible','off','Enable','off');
     set(handles.questionConfidence4,'visible','off','Enable','off');
     set(handles.questionText5,'visible','off','Enable','off');
     set(handles.question5panel,'visible','off'); 
     set(handles.question5Radiobutton1,'visible','off','Enable','off');
     set(handles.question5Radiobutton2,'visible','off','Enable','off');
     set(handles.questionConfidence5,'visible','off','Enable','off');    
     set(handles.slideNameText,'visible','off','Enable','off');
     set(handles.slideNameResult,'visible','off','Enable','off');
     set(handles.startTracking,'visible','off','Enable','off');
     set(handles.stopTracking,'visible','off','Enable','off');
     set(handles.recodingStatus,'visible','off','Enable','off');
     set(handles.commentText6,'visible','off','Enable','off');
     set(handles.commentResult6,'visible','off','Enable','off');
     set(handles.goToPage3,'visible','off','Enable','off');
     % show page 3 info
     set(handles.registrationText,'visible','on','Enable','on');
     set(handles.upLeftReg,'visible','on','Enable','on');
     set(handles.bottomLeftReg,'visible','on','Enable','on');
     set(handles.bottomRightReg,'visible','on','Enable','on');
     myData=handles.myData;   
     taskinfo = myData.tasks_out{myData.iter};
     FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
     aviObject = VideoWriter(strcat(FolderName,'\',...
                            'ID-',taskinfo.id,...
                            '_iter-',num2str(taskinfo.order),...
                            '_registrationVideo.avi')); 
     aviObject.FrameRate = 15; 
     handles.cam.DiskLogger = aviObject;
     start(handles.cam);
     guidata(hObj, handles);
catch ME
    error_show(ME)
end
end




%% registration page button
function upLeftReg_Callback(hObj, eventdata) %#ok<DEFNU>
    handles = guidata(findobj('Tag','GUI'));
    myData=handles.myData;    
    cam_image = getsnapshot(handles.cam);
    taskinfo = myData.tasks_out{myData.iter};
    FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
    if ~exist(FolderName,'file')
       mkdir(FolderName);
    end
%handles.myData.stage = stage_get_pos(handles.myData.stage);
    stage = stage_get_pos(myData.stage);
    x = stage.Pos(1);
    y = stage.Pos(2);
    imwrite(cam_image,strcat(FolderName,'\',...
        'ID',taskinfo.id,...
        '_Slot',num2str(taskinfo.slot),...
        '_Order',num2str(taskinfo.order),...
        '_x',num2str(x),...
        '_y',num2str(y),...
        '_1upLeft.tif'));
    
    taskinfo.done3(1)=1;
    tdone3=sum(taskinfo.done3);
    if  tdone3==3
        stop(handles.cam);
        close(handles.cam.DiskLogger);
        handles.cam.DiskLogger = [];
        handles.cam.LoggingMode = 'memory';
        handles.cam.TriggerRepeat = 0;
        handles.cam.FramesPerTrigger = 10;
        set(handles.NextButton,'Enable','on');
    end
    taskinfo.stagePosition{1} = [int2str(x),',',int2str(y)];    
    set(handles.upLeftReg,'String','Retake Up Left Reg');   
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);

end

function bottomLeftReg_Callback(hObj, eventdata) %#ok<DEFNU>
    handles = guidata(findobj('Tag','GUI'));
    myData=handles.myData;    
    cam_image = getsnapshot(handles.cam);
    taskinfo = myData.tasks_out{myData.iter};
    FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
    if ~exist(FolderName,'file')
       mkdir(FolderName);
    end

    stage = stage_get_pos(myData.stage);
    x = stage.Pos(1);
    y = stage.Pos(2);
    imwrite(cam_image,strcat(FolderName,'\',...
        'ID',taskinfo.id,...
        '_Slot',num2str(taskinfo.slot),...
        '_Order',num2str(taskinfo.order),...
        '_x',num2str(x),...
        '_y',num2str(y),...
        '_2bottomLeft.tif'));
    
    taskinfo.done3(2)=1;
    tdone3=sum(taskinfo.done3);
    if  tdone3==3
        stop(handles.cam);
        close(handles.cam.DiskLogger);
        handles.cam.DiskLogger = [];
        handles.cam.LoggingMode = 'memory';
        handles.cam.TriggerRepeat = 0;
        handles.cam.FramesPerTrigger = 10;
        set(handles.NextButton,'Enable','on');
    end
    taskinfo.stagePosition{2} = [int2str(x),',',int2str(y)];
    set(handles.bottomLeftReg,'String','Retake Bottom Left Reg'); 
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end

function bottomRightReg_Callback(hObj, eventdata) %#ok<DEFNU>
    handles = guidata(findobj('Tag','GUI'));
    myData=handles.myData;    
    cam_image = getsnapshot(handles.cam);
    taskinfo = myData.tasks_out{myData.iter};
    FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
    if ~exist(FolderName,'file')
       mkdir(FolderName);
    end

    stage = stage_get_pos(myData.stage);
    x = stage.Pos(1);
    y = stage.Pos(2);
    imwrite(cam_image,strcat(FolderName,'\',...
        'ID',taskinfo.id,...
        '_Slot',num2str(taskinfo.slot),...
        '_Order',num2str(taskinfo.order),...
        '_x',num2str(x),...
        '_y',num2str(y),...
        '_3bottomRight.tif'));
    
    taskinfo.done3(3)=1;
    tdone3=sum(taskinfo.done3);
    if  tdone3==3
        stop(handles.cam);
        close(handles.cam.DiskLogger);
        handles.cam.DiskLogger = [];
        handles.cam.LoggingMode = 'memory';
        handles.cam.TriggerRepeat = 0;
        handles.cam.FramesPerTrigger = 10;
        set(handles.NextButton,'Enable','on');
    end
    taskinfo.stagePosition{3} = [int2str(x),',',int2str(y)];
    set(handles.bottomRightReg,'String','Retake Bottom Right Reg'); 
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
end
