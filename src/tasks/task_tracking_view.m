function task_mitotic_counts( hObj )
%TASK_MITOTIC_COUNTS Summary of this function goes here
%   Detailed explanation goes here
try
    
    handles = guidata(hObj);
    myData = handles.myData;
    taskinfo = myData.taskinfo;
    calling_function = handles.myData.taskinfo.calling_function;
    
    display([taskinfo.task, ' called from ', calling_function])
    
    switch calling_function
        
        case 'Load_Input_File' % Read in the taskinfo
            
           handles = guidata(hObj);
            
            desc = taskinfo.desc;

            taskinfo.task  = char(desc{1});
            taskinfo.id = char(desc{2});
            taskinfo.order = str2double(desc{3});
            taskinfo.slot = str2double(desc{4});
            taskinfo.question1 = char(desc{5});
            taskinfo.question2 = char(desc{6});
            taskinfo.question3 = char(desc{7});
            taskinfo.question4 = char(desc{8});
            taskinfo.question5 = char(desc{9});
            wsi_files = myData.wsi_files{taskinfo.slot};
            taskinfo.roi_w = max(wsi_files.wsi_w);
            taskinfo.roi_h = max(wsi_files.wsi_h);
            taskinfo.roi_x = taskinfo.roi_w/2+1;
            taskinfo.roi_y = taskinfo.roi_h/2+1;
            mp = get(0, 'MonitorPositions');
            screensize= mp(find(mp(:,1)==1&mp(:,2)==1),:);
            if  taskinfo.roi_w/ taskinfo.roi_h>(screensize(4)*0.8)/screensize(3); 
            taskinfo.img_w = floor(screensize(4)*0.7);
            taskinfo.img_h = 0;
            else
            taskinfo.img_w = 0;
            taskinfo.img_h = floor(screensize(3)*0.9);
            end
            wsi_files = handles.myData.wsi_files;
            wsi_name = wsi_files{taskinfo.slot}.fullname;
            slashIndex = strfind(wsi_name,'\');
            wsi_name = wsi_name((slashIndex(end)+1):end);
            taskinfo.text  = ['Tracking view for ', wsi_name];
            taskinfo.rotateback = 0;
            if length(taskinfo.desc)>9
                myData.finshedTask = myData.finshedTask + 1;
            end            
        case {'Update_GUI_Elements', ...
                'ResumeButtonPressed'} % Initialize task elements
            
            % Load the image
            taskimage_load(hObj);
            handles = guidata(hObj);

            % Show management buttons
            taskmgt_default(handles, 'on');
            handles = guidata(hObj);
            taskinfo.done=zeros(1,6);
            % Static text question for count task

          % Start tracking button
          handles.startTracking = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', 16, ...
                    'Units', 'normalized', ...
                    'ForegroundColor',  handles.myData.settings.FG_color, ...
                    'BackgroundColor',  handles.myData.settings.BG_color, ...
                    'Position',[0.6,0.8,0.2,0.2], ...
                    'Style', 'pushbutton', ...
                    'Tag', 'editvalue', ...
                    'enable','on',...
                    'String', 'Start tracking',...
                    'Callback',@startTrackView_Callback);  

          % Stop tracking button
          handles.stopTracking = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', 16, ...
                    'Units', 'normalized', ...
                    'ForegroundColor',  handles.myData.settings.FG_color, ...
                    'BackgroundColor',  handles.myData.settings.BG_color, ...
                    'Position',[0.8,0.8,0.2,0.2], ...
                    'Style', 'pushbutton', ...
                    'Tag', 'editvalue', ...
                    'enable','on',...
                    'String', 'Stop tracking',...
                    'Callback',@stopTrackView_Callback);  
                
          % Recoding status
           handles.recodingStatus = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.6,0.7,0.4,0.1], ...
                    'Style', 'Text', ...
                    'String', 'Click Start tracking button to record', ...
                    'Tag', 'recodingStatus');

           % Question 1 text
           handles.questionText1 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.1,0.6,0.5,0.1], ...
                    'Style', 'Text', ...
                    'String', taskinfo.question1, ...
                    'Tag', 'questionText1');
           % Question 1 result
            handles.questionResult1 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.65,0.6,0.1,0.1], ...
                'Style', 'edit', ...
                'Tag', 'questionResult1', ...
                'Callback', @questionResult1_Callback);
            
           % Question 2 text
           handles.questionText2 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.1,0.5,0.5,0.1], ...
                    'Style', 'Text', ...
                    'String', taskinfo.question2, ...
                    'Tag', 'questionText2');
           % Question 2 result
            handles.questionResult2 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.65,0.5,0.1,0.1], ...
                'Style', 'edit', ...
                'Tag', 'questionResult2', ...
                'Callback', @questionResult2_Callback);
            
           % Question 3 text
           handles.questionText3 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.1,0.4,0.5,0.1], ...
                    'Style', 'Text', ...
                    'String', taskinfo.question3, ...
                    'Tag', 'questionText3');
           % Question 3 result
            handles.questionResult3 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.65,0.4,0.1,0.1], ...
                'Style', 'edit', ...
                'Tag', 'questionResult3', ...
                'Callback', @questionResult3_Callback);
            
           % Question 4 text
           handles.questionText4 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.1,0.3,0.5,0.1], ...
                    'Style', 'Text', ...
                    'String', taskinfo.question4, ...
                    'Tag', 'questionText4');
           % Question 4 result
            handles.questionResult4 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.65,0.3,0.1,0.1], ...
                'Style', 'edit', ...
                'Tag', 'questionResult4', ...
                'Callback', @questionResult4_Callback);
            
           % Question 5 text
           handles.questionText5 = uicontrol(...
                    'Parent', handles.task_panel, ...
                    'FontSize', handles.myData.settings.FontSize, ...
                    'Units', 'normalized', ...
                    'HorizontalAlignment', 'left', ...
                    'ForegroundColor', handles.myData.settings.FG_color, ...
                    'BackgroundColor', handles.myData.settings.BG_color, ...
                    'Position', [0.1,0.2,0.5,0.1], ...
                    'Style', 'Text', ...
                    'String', taskinfo.question5, ...
                    'Tag', 'questionText5');
           % Question 5 result
            handles.questionResult5 = uicontrol(...
                'Parent', handles.task_panel, ...
                'FontSize', handles.myData.settings.FontSize, ...
                'Units', 'normalized', ...
                'HorizontalAlignment', 'center', ...
                'ForegroundColor', handles.myData.settings.FG_color, ...
                'BackgroundColor', [.95, .95, .95], ...
                'Position', [0.65,0.2,0.1,0.1], ...
                'Style', 'edit', ...
                'Tag', 'questionResult5', ...
                'Callback', @questionResult5_Callback);
                
        case {'NextButtonPressed', ...
                'PauseButtonPressed',...
                'Backbutton_Callback'} % Clean up the task elements
            
            % Hide image and management buttons
            
            taskmgt_default(handles, 'off');
            handles = guidata(hObj);
            
            set(handles.iH,'visible','off');
            set(handles.ImageAxes,'visible','off');
            delete(handles.startTracking);
            delete(handles.stopTracking);
            delete(handles.recodingStatus);
            delete(handles.questionText1);
            delete(handles.questionResult1);
            delete(handles.questionText2);
            delete(handles.questionResult2);
            delete(handles.questionText3);
            delete(handles.questionResult3);
            delete(handles.questionText4);
            delete(handles.questionResult4);
            delete(handles.questionText5);
            delete(handles.questionResult5);
            handles = rmfield(handles, 'startTracking');
            handles = rmfield(handles, 'stopTracking');
            handles = rmfield(handles, 'recodingStatus');
            handles = rmfield(handles, 'questionText1');
            handles = rmfield(handles, 'questionResult1');
            handles = rmfield(handles, 'questionText2');
            handles = rmfield(handles, 'questionResult2');
            handles = rmfield(handles, 'questionText3');
            handles = rmfield(handles, 'questionResult3');
            handles = rmfield(handles, 'questionText4');
            handles = rmfield(handles, 'questionResult4');
            handles = rmfield(handles, 'questionText5');
            handles = rmfield(handles, 'questionResult5');
            
        case 'exportOutput' % export current task information and reuslt
            if taskinfo.currentWorking ==1 % write finish task in current study
                fprintf(myData.fid, [...
                    taskinfo.task, ',', ...
                    taskinfo.id, ',', ...
                    num2str(taskinfo.order), ',', ...
                    num2str(taskinfo.slot), ',',...
                    'track_veiw', ',', ...
                    num2str(taskinfo.duration),',',...
                    taskinfo.score1,',',...
                    taskinfo.score2,',',...
                    taskinfo.score3,',',...
                    taskinfo.score4,',',...
                    taskinfo.score5]);
            elseif taskinfo.currentWorking ==0 % write undone task
                fprintf(myData.fid, [...
                    taskinfo.task, ',', ...
                    taskinfo.id, ',', ...
                    num2str(taskinfo.order), ',', ...
                    num2str(taskinfo.slot)]);
            else                               % write done task from previous study
                desc = taskinfo.desc;
                for i = 1 : length(desc)-1
                    fprintf(myData.fid,[desc{i},',']);
                end
                fprintf(myData.fid,[desc{length(desc)}]);
            end            
            fprintf(myData.fid,'\r\n');
            handles.myData.taskinfo = taskinfo;
            guidata(handles.GUI, handles);   
            
    end

    % Update handles.myData.taskinfo and pack
    myData.taskinfo = taskinfo;
    handles.myData = myData;
    guidata(hObj, handles);

catch ME
    error_show(ME)
end
end

% --- Executes on button press in Recode_video.
function startTrackView_Callback(hObj, eventdata)
% hObject    handle to Recode_video (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    handles = guidata(hObj);
    myData = handles.myData;
    FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
    taskinfo = myData.taskinfo    
    if ~exist(FolderName,'file')
        mkdir(FolderName);
    end
    % record audio
    wavObject = audiorecorder;
    record(wavObject);
    handles.audio = wavObject;
%    guidata(hObject, handles);
    % manage buttons
    set(handles.startTracking,'Enable','off')
    set(handles.stopTracking,'Enable','on')
    set(handles.recodingStatus,'String','Recording!');
    % record video
    aviObject = VideoWriter(strcat(FolderName,'\',...
                            'ID-',taskinfo.id,...
                            '_iter-',num2str(taskinfo.order),...
                            '_recordVideo.avi')); 
    handles.cam.DiskLogger = aviObject;
    handles.cam.LoggingMode = 'disk';
    handles.cam.TriggerRepeat = Inf;
    handles.cam.FramesPerTrigger = Inf;
    start(handles.cam);
    
     guidata(hObj, handles);


end


% --- Executes on button press in Stop_video.
function stopTrackView_Callback(hObj, eventdata)
% hObject    handle to Stop_video (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
   
    handles = guidata(hObj);
    myData = handles.myData;
    FolderName=[myData.output_files_dir,...
            strrep(myData.outputfile,'.dapso','')];
    taskinfo = myData.taskinfo;
     % video
    video= handles.cam;
    stop(video);
    close(handles.cam.DiskLogger);

    % audio
    wavObject = handles.audio;
    stop(wavObject);
    audioData = getaudiodata(wavObject);
    audioFileName =strcat(FolderName,'\',...
                            'ID-',taskinfo.id,...
                            '_iter-',num2str(taskinfo.order),...
                            '_recordAudio.wav');
    audiowrite(audioFileName,audioData,wavObject.SampleRate);
    
    % manage buttons
    set(handles.recodingStatus,'String',{'Click Start tracking button to record'});
    set(handles.startTracking,'Enable','on');
    set(handles.stopTracking,'Enable','off');
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    taskinfo.done(6)=1;
    tdone=sum(taskinfo.done);
    if tdone==6;
        set(handles.Reticlebutton, 'Enable', 'on');
        set(handles.NextButton, 'Enable', 'on');
        set(handles.PauseButton, 'Enable', 'on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(hObj, handles);
end

function questionResult1_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.score1 = get(handles.questionResult1, 'String');
    taskinfo.done(1)=1;
    tdone=sum(taskinfo.done);
        if tdone==6;
            set(handles.NextButton,'Enable','on');
        end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

function questionResult2_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.score2 = get(handles.questionResult2, 'String');
    taskinfo.done(2)=1;
    tdone=sum(taskinfo.done);
    if tdone==6;
        set(handles.NextButton,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

function questionResult3_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.score3 = get(handles.questionResult3, 'String');
    taskinfo.done(3)=1;
    tdone=sum(taskinfo.done);
    if tdone==6;
        set(handles.NextButton,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

function questionResult4_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.score4 = get(handles.questionResult4, 'String');
    taskinfo.done(4)=1;
    tdone=sum(taskinfo.done);
    if tdone==6;
        set(handles.NextButton,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end

function questionResult5_Callback (hObj, eventdata)
    handles = guidata(findobj('Tag','GUI'));
    taskinfo = handles.myData.tasks_out{handles.myData.iter};
    % Pack the results
    taskinfo.score5 = get(handles.questionResult5, 'String');
    taskinfo.done(5)=1;
    tdone=sum(taskinfo.done);
    if tdone==6;
        set(handles.NextButton,'Enable','on');
    end
    handles.myData.tasks_out{handles.myData.iter} = taskinfo;
    guidata(handles.GUI, handles);
    
end
